# 任务配置
task: transfer_diagnosis_dann

# 输入文件 (注意：MHDCNN处理的是1D特征，所以我们用回features.parquet)
features_path: "outputs/data/artifacts/features.parquet"
label_encoder_path: "outputs/models/source_xgb_baseline_label_encoder.pkl"

# DANN 模型与训练参数
model:
  name: "DANN"
  # --- 关键改动：指定使用MHDCNN ---
  feature_extractor_type: "MHDCNN"

  # 输入特征的维度，必须与features.parquet中的特征数量一致
  input_dim: 21

  # MHDCNN输出的特征维度较小(6)，分类器和判别器的网络可以简化
  label_predictor_arch: [16]
  domain_discriminator_arch: [16]

training_params:
  learning_rate: 0.001
  num_epochs: 150      # 训练轮数可以适当增加
  batch_size: 128
  adversarial_lambda: 0.8 # lambda可以根据效果微调

# 输出配置 (使用新的tag以区分实验)
outputs:
  base_dir: "outputs"
  tag: "dann_mhdcnn_1d_v1"
  model_path: "outputs/models/dann_mhdcnn_1d_final_model.pth"
  target_predictions_path: "outputs/predictions/DANN/target_preds_dann_mhdcnn_1d.csv"
  visualization_path: "outputs/figs/transfer/tsne_after_dann_mhdcnn_1d.png"